services:
  db:
    image: mysql:8.0
    container_name: database
    networks:
      - mynetwork
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: senha
      MYSQL_DATABASE: meupet
    volumes:
      - "./conf.d:/etc/mysql/conf.d:ro"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "db", "-u", "root", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - mynetwork
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redis_data:/data

#  api:
#    depends_on:
#      db:
#        condition: service_healthy
#      redis:
#        condition: service_started
#    build:
#      context: .
#      dockerfile: Dockerfile
#    networks:
#      - mynetwork
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/meupet
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: senha
#      SPRING_REDIS_HOST: redis
#      SPRING_REDIS_PORT: 6379

networks:
  mynetwork:
    driver: bridge

volumes:
  redis_data: